(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{371:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"tapable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tapable"}},[t._v("#")]),t._v(" Tapable")]),t._v(" "),a("p",[t._v("웹팩의 내부 기작을 이해하려면 Tapable을 이해해야 한다.")]),t._v(" "),a("p",[t._v('node에 util이라는 공식 라이브러리가 있다는 걸 배웠다.\n문자열을 처리하는 기초 함수들도 제공하고,\n로깅 관련 함수들, 비동기처리리를 도와주는 함수들 등 다양한 "utility" 함수들이 있다.')]),t._v(" "),a("p",[t._v("tapable에서 사용되는 함수는 "),a("code",[t._v("deprecate")]),t._v("였다.\n다음처럼 사용하며, "),a("code",[t._v("DeprecationWarning")]),t._v("을 내는 함수를 만들어준다고 한다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" util "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'util'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obsoleteFunction "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deprecate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do something here.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obsoleteFunction() is deprecated. Use newShinyFunction() instead.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"hook-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hook-js"}},[t._v("#")]),t._v(" Hook.js")]),t._v(" "),a("h3",{attrs:{id:"method-copy-inside-constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#method-copy-inside-constructor"}},[t._v("#")]),t._v(" method copy inside constructor...")]),t._v(" "),a("p",[a("code",[t._v("lib/Hook.js")]),t._v("를 따라 치던 중, 의도가 이해되지 않는 부분이 있었다.\n바로 생성자에 있던 "),a("code",[t._v("this.compile = this.compile")]),t._v("...")]),t._v(" "),a("p",[t._v("이 부분이 없어도, 분명 잘 돌아갈 것이다.\n인스턴스는 본인에게 없는 함수를 호출할 때,\n본인의 프로토타입 체인을 거슬러 올라가 기어코 이 compile 메소드를\n찾아내어 호출할 게 분명하다.")]),t._v(" "),a("p",[t._v("하지만, 직접 간단한 클래스를 작성해서 비교해보니\n이렇게 생성자 안에 동명의 메소드를 넣어주니, 다음이 좋았다:")]),t._v(" "),a("ul",[a("li",[t._v("생성자만 보더라도, 클래스의 구성이 한 눈에 들어온다.")]),t._v(" "),a("li",[t._v("인스턴스에서 해당 메소드를 호출할 때, 프로토타입 체인 참조가 적어져 더 빠르다.")]),t._v(" "),a("li",[t._v("인스턴스를 콘솔에서 조사할 때, 가지고 있는 메소드가 자동완성된다.")])]),t._v(" "),a("p",[t._v("이것만도 벌써 많이 배웠다.")])])}),[],!1,null,null,null);s.default=e.exports}}]);